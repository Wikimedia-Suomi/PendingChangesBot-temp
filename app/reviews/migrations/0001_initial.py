# Generated by Django 4.2.25 on 2025-10-02 21:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Wiki",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("code", models.CharField(max_length=50, unique=True)),
                ("family", models.CharField(default="wikipedia", max_length=100)),
                (
                    "api_endpoint",
                    models.URLField(
                        help_text="Full API endpoint, e.g. https://fi.wikipedia.org/w/api.php"
                    ),
                ),
                ("script_path", models.CharField(default="/w", max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="WikiConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("blocking_categories", models.JSONField(blank=True, default=list)),
                ("auto_approved_groups", models.JSONField(blank=True, default=list)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "wiki",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configuration",
                        to="reviews.wiki",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PendingPage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pageid", models.BigIntegerField()),
                ("title", models.CharField(max_length=500)),
                ("stable_revid", models.BigIntegerField()),
                ("pending_since", models.DateTimeField(blank=True, null=True)),
                ("fetched_at", models.DateTimeField(auto_now=True)),
                (
                    "wiki",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pending_pages",
                        to="reviews.wiki",
                    ),
                ),
            ],
            options={
                "ordering": ["title"],
                "unique_together": {("wiki", "pageid")},
            },
        ),
        migrations.CreateModel(
            name="PendingRevision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("revid", models.BigIntegerField()),
                ("parentid", models.BigIntegerField(blank=True, null=True)),
                ("user_name", models.CharField(blank=True, max_length=255)),
                ("user_id", models.BigIntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("fetched_at", models.DateTimeField(auto_now_add=True)),
                ("age_at_fetch", models.DurationField()),
                ("sha1", models.CharField(max_length=40)),
                ("comment", models.TextField(blank=True)),
                ("change_tags", models.JSONField(blank=True, default=list)),
                ("wikitext", models.TextField()),
                ("categories", models.JSONField(blank=True, default=list)),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="revisions",
                        to="reviews.pendingpage",
                    ),
                ),
            ],
            options={
                "ordering": ["timestamp"],
                "unique_together": {("page", "revid")},
            },
        ),
        migrations.CreateModel(
            name="EditorProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=255)),
                ("usergroups", models.JSONField(blank=True, default=list)),
                ("is_blocked", models.BooleanField(default=False)),
                ("is_bot", models.BooleanField(default=False)),
                ("is_autopatrolled", models.BooleanField(default=False)),
                ("is_autoreviewed", models.BooleanField(default=False)),
                ("fetched_at", models.DateTimeField(auto_now=True)),
                (
                    "wiki",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="editor_profiles",
                        to="reviews.wiki",
                    ),
                ),
            ],
            options={
                "ordering": ["username"],
                "unique_together": {("wiki", "username")},
            },
        ),
    ]
